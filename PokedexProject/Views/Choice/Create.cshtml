@model PokedexProject.Models.Choice.ChoiceCreate

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>ChoiceCreate</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })




    <div class="form-group">
        @Html.LabelFor(model => model.ChoiceText, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ChoiceText, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ChoiceText, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.QuestionId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("QuestionId", new SelectList(ViewBag.QuestionList, "QuestionId", "QuestionText"))
            @Html.ValidationMessageFor(model => model.QuestionId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
            @Html.LabelFor(model => model.ChallengeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ChallengeId", new SelectList(ViewBag.ChallengeList, "ChallengeId", "ChallengeName"))
                @Html.ValidationMessageFor(model => model.ChallengeId, "", new { @class = "text-danger" })
            </div>
        </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
